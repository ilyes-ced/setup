use std::{path::PathBuf, fs::{read_to_string, File, self}, io::Write};
use std::error::Error;
use handlebars::Handlebars;
use rand::seq::IteratorRandom;
use serde_json::{from_str, Value, json};


fn main() -> Result<(), Box<dyn Error>> {
    // reads files from themes/json and create all the color scheme files for alacritty i3 polybar ......


    // render without register
    let mut rng = rand::thread_rng();
    let files = fs::read_dir("themes/json/").unwrap();
    let file = files.choose(&mut rng).unwrap().unwrap();
    
    println!("{}", file.path().display());
    
    let json_values = read_scheme_json(&file.path()).unwrap();


    let _ = create_json(&json_values).unwrap();
    let _ = create_alacritty(&json_values).unwrap();
    let _ = create_rofi(&json_values).unwrap();
    let _ = create_polybar(&json_values).unwrap();
    Ok(())

}




fn create_json(s: &Value) -> Result<(), Box<dyn Error>> {
    let reg = Handlebars::new();
    let template = fs::read_to_string("templates/json.json").unwrap();
    let new_json = reg.render_template(
        &template,
        &json!({
            "color0": s["color0"],
            "color1": s["color1"],
            "color2": s["color2"],
            "color3": s["color3"],
            "color4": s["color4"],
            "color5": s["color5"],
            "color6": s["color6"],
            "color7": s["color7"],
            "color8": s["color8"],
            "color9": s["color9"],
            "color10": s["color10"],
            "color11": s["color11"],
            "color12": s["color12"],
            "color13": s["color13"],
            "color14": s["color14"],
            "color15": s["color15"],
            "background": s["background"],
            "foreground": s["foreground"],
            "cursor": s["cursor"],
        }),
    )?;
    let mut file = File::create("themes/active/active.json").unwrap();
    file.write_all(new_json.as_bytes()).unwrap();
    Ok(())
}





fn create_alacritty(s: &Value) -> Result<(), Box<dyn Error>> {
    let reg = Handlebars::new();
    let template = fs::read_to_string("templates/alacritty.yml").unwrap();
    let new_json = reg.render_template(
        &template,
        &json!({
            "color0": s["color0"],
            "color1": s["color1"],
            "color2": s["color2"],
            "color3": s["color3"],
            "color4": s["color4"],
            "color5": s["color5"],
            "color6": s["color6"],
            "color7": s["color7"],
            "color8": s["color8"],
            "color9": s["color9"],
            "color10": s["color10"],
            "color11": s["color11"],
            "color12": s["color12"],
            "color13": s["color13"],
            "color14": s["color14"],
            "color15": s["color15"],
            "background": s["background"],
            "foreground": s["foreground"],
            "cursor": s["cursor"],
        }),
    )?;
    let mut file = File::create("themes/active/alacritty.yml").unwrap();
    file.write_all(new_json.as_bytes()).unwrap();
    Ok(())
}





fn create_polybar(s: &Value) -> Result<(), Box<dyn Error>> {
    let reg = Handlebars::new();
    let template = fs::read_to_string("templates/colors.ini").unwrap();
    let new_json = reg.render_template(
        &template,
        &json!({
            "color0": s["color0"],
            "color1": s["color1"],
            "color2": s["color2"],
            "color3": s["color3"],
            "color4": s["color4"],
            "color5": s["color5"],
            "color6": s["color6"],
            "color7": s["color7"],
            "color8": s["color8"],
            "color9": s["color9"],
            "color10": s["color10"],
            "color11": s["color11"],
            "color12": s["color12"],
            "color13": s["color13"],
            "color14": s["color14"],
            "color15": s["color15"],
            "background": s["background"],
            "foreground": s["foreground"],
            "cursor": s["cursor"],
        }),
    )?;
    let mut file = File::create("themes/active/colors.ini").unwrap();
    file.write_all(new_json.as_bytes()).unwrap();
    Ok(())
}



fn create_rofi(s: &Value) -> Result<(), Box<dyn Error>> {
    let reg = Handlebars::new();
    let template = fs::read_to_string("templates/rofi.rasi").unwrap();
    let new_json = reg.render_template(
        &template,
        &json!({
            "color0": s["color0"],
            "color1": s["color1"],
            "color2": s["color2"],
            "color3": s["color3"],
            "color4": s["color4"],
            "color5": s["color5"],
            "color6": s["color6"],
            "color7": s["color7"],
            "color8": s["color8"],
            "color9": s["color9"],
            "color10": s["color10"],
            "color11": s["color11"],
            "color12": s["color12"],
            "color13": s["color13"],
            "color14": s["color14"],
            "color15": s["color15"],
            "background": s["background"],
            "foreground": s["foreground"],
            "cursor": s["cursor"],
        }),
    )?;
    let mut file = File::create("themes/active/rofi.rasi").unwrap();
    file.write_all(new_json.as_bytes()).unwrap();
    Ok(())
}



fn create_gtk() {}
fn create_i3() {}





fn read_scheme_json(path: &PathBuf) -> Result<Value, ()> {
    let binding = read_to_string(path).unwrap();
    let colors = binding.as_str();
    let json: Value = from_str(colors).expect("JSON was not well-formatted");
    Ok(json)
}

fn set_random_wallpaper(wallpaper: Option<&str>) {
    match wallpaper {
        Some(path) => {
            //set wall from path
        },
        None => {
            //set random wall
        },
    }
}



const themes_names: [&str; 544] = [
    "jsons_3024_day.json",
    "jsons_3024_night.json",
    "jsons_aci.json",
    "jsons_aco.json",
    "jsons_adventure_time.json",
    "jsons_afterglow.json",
    "jsons_alien_blood.json",
    "jsons_apprentice.json",
    "jsons_argonaut.json",
    "jsons_arthur.json",
    "jsons_atom.json",
    "jsons_aura.json",
    "jsons_ayu_dark.json",
    "jsons_ayu_light.json",
    "jsons_ayu_mirage.json",
    "jsons_azu.json",
    "jsons_belafonte_day.json",
    "jsons_belafonte_night.json",
    "jsons_bim.json",
    "jsons_birds_of_paradise.json",
    "jsons_blazer.json",
    "jsons_bluloco_light.json",
    "jsons_bluloco_zsh_light.json",
    "jsons_borland.json",
    "jsons_breath_darker.json",
    "jsons_breath_light.json",
    "jsons_breath_silverfox.json",
    "jsons_breath.json",
    "jsons_breeze.json",
    "jsons_broadcast.json",
    "jsons_brogrammer.json",
    "jsons_c64.json",
    "jsons_cai.json",
    "jsons_catppuccin_frappe.json",
    "jsons_catppuccin_latte.json",
    "jsons_catppuccin_macchiato.json",
    "jsons_catppuccin_mocha.json",
    "jsons_chalk.json",
    "jsons_chalkboard.json",
    "jsons_chameleon.json",
    "jsons_ciapre.json",
    "jsons_clone_of_ubuntu.json",
    "jsons_clrs.json",
    "jsons_cobalt_2.json",
    "jsons_cobalt_neon.json",
    "jsons_colorcli.json",
    "jsons_crayon_pony_fish.json",
    "jsons_dark_pastel.json",
    "jsons_darkside.json",
    "jsons_dehydration.json",
    "jsons_desert.json",
    "jsons_dimmed_monokai.json",
    "jsons_dissonance.json",
    "jsons_dracula.json",
    "jsons_earthsong.json",
    "jsons_elemental.json",
    "jsons_elementary.json",
    "jsons_elic.json",
    "jsons_elio.json",
    "jsons_espresso_libre.json",
    "jsons_espresso.json",
    "jsons_everblush.json",
    "jsons_everforest_dark.json",
    "jsons_everforest_light.json",
    "jsons_fairy_floss_dark.json",
    "jsons_fairy_floss.json",
    "jsons_fishtank.json",
    "jsons_flat_remix.json",
    "jsons_flat.json",
    "jsons_flatland.json",
    "jsons_foxnightly.json",
    "jsons_freya.json",
    "jsons_frontend_delight.json",
    "jsons_frontend_fun_forrest.json",
    "jsons_frontend_galaxy.json",
    "jsons_geohot.json",
    "jsons_github.json",
    "jsons_gogh.json",
    "jsons_gooey.json",
    "jsons_google_dark.json",
    "jsons_google_light.json",
    "jsons_gotham.json",
    "jsons_grape.json",
    "jsons_grass.json",
    "jsons_gruvbox_dark.json",
    "jsons_gruvbox_material.json",
    "jsons_gruvbox.json",
    "jsons_hardcore.json",
    "jsons_harper.json",
    "jsons_hemisu_dark.json",
    "jsons_hemisu_light.json",
    "jsons_highway.json",
    "jsons_hipster_green.json",
    "jsons_homebrew_light.json",
    "jsons_homebrew_ocean.json",
    "jsons_homebrew.json",
    "jsons_horizon_bright.json",
    "jsons_horizon_dark.json",
    "jsons_hurtado.json",
    "jsons_hybrid.json",
    "jsons_ibm_3270_high_contrast_.json",
    "jsons_ibm3270.json",
    "jsons_ic_green_ppl.json",
    "jsons_ic_orange_ppl.json",
    "jsons_idle_toes.json",
    "jsons_ir_black.json",
    "jsons_jackie_brown.json",
    "jsons_japanesque.json",
    "jsons_jellybeans.json",
    "jsons_jup.json",
    "jsons_kanagawa.json",
    "jsons_kibble.json",
    "jsons_kokuban.json",
    "jsons_laserwave.json",
    "jsons_later_this_evening.json",
    "jsons_lavandula.json",
    "jsons_liquid_carbon_transparent.json",
    "jsons_liquid_carbon.json",
    "jsons_lunaria_dark.json",
    "jsons_lunaria_eclipse.json",
    "jsons_lunaria_light.json",
    "jsons_maia.json",
    "jsons_man_page.json",
    "jsons_mar.json",
    "jsons_material.json",
    "jsons_mathias.json",
    "jsons_medallion.json",
    "jsons_misterioso.json",
    "jsons_molokai.json",
    "jsons_mona_lisa.json",
    "jsons_mono_amber.json",
    "jsons_mono_cyan.json",
    "jsons_mono_green.json",
    "jsons_mono_red.json",
    "jsons_mono_white.json",
    "jsons_mono_yellow.json",
    "jsons_monokai_dark.json",
    "jsons_monokai_pro_ristretto.json",
    "jsons_monokai_pro.json",
    "jsons_monokai_soda.json",
    "jsons_morada.json",
    "jsons_n0tch2k.json",
    "jsons_neon_night.json",
    "jsons_neopolitan.json",
    "jsons_nep.json",
    "jsons_neutron.json",
    "jsons_night_owl.json",
    "jsons_nightlion_v1.json",
    "jsons_nightlion_v2.json",
    "jsons_nighty.json",
    "jsons_nord_light.json",
    "jsons_nord.json",
    "jsons_novel.json",
    "jsons_obsidian.json",
    "jsons_ocean_dark.json",
    "jsons_oceanic_next.json",
    "jsons_ollie.json",
    "jsons_omni.json",
    "jsons_one_dark.json",
    "jsons_one_half_black.json",
    "jsons_one_light.json",
    "jsons_oxocarbon_dark.json",
    "jsons_palenight.json",
    "jsons_pali.json",
    "jsons_panda.json",
    "jsons_papercolor_dark.json",
    "jsons_papercolor_light.json",
    "jsons_paraiso_dark.json",
    "jsons_paul_millr.json",
    "jsons_pencil_dark.json",
    "jsons_pencil_light.json",
    "jsons_peppermint.json",
    "jsons_pixiefloss.json",
    "jsons_pnevma.json",
    "jsons_powershell.json",
    "jsons_predawn.json",
    "jsons_pro.json",
    "jsons_purple_people_eater.json",
    "jsons_red_alert.json",
    "jsons_red_sands.json",
    "jsons_relaxed.json",
    "jsons_rippedcasts.json",
    "jsons_rose_pine_dawn.json",
    "jsons_rose_pine_moon.json",
    "jsons_rose_pine.json",
    "jsons_royal.json",
    "jsons_sat.json",
    "jsons_sea_shells.json",
    "jsons_seafoam_pastel.json",
    "jsons_seti.json",
    "jsons_shaman.json",
    "jsons_shel.json",
    "jsons_slate.json",
    "jsons_smyck.json",
    "jsons_snazzy.json",
    "jsons_soft_server.json",
    "jsons_solarized_darcula.json",
    "jsons_solarized_dark_higher_contrast.json",
    "jsons_solarized_dark.json",
    "jsons_solarized_light.json",
    "jsons_sonokai.json",
    "jsons_spacedust.json",
    "jsons_spacegray_eighties_dull.json",
    "jsons_spacegray_eighties.json",
    "jsons_spacegray.json",
    "jsons_spring.json",
    "jsons_square.json",
    "jsons_srcery.json",
    "jsons_summer_pop.json",
    "jsons_sundried.json",
    "jsons_sweet_eliverlara.json",
    "jsons_sweet_terminal.json",
    "jsons_symphonic.json",
    "jsons_synthwave_alpha.json",
    "jsons_synthwave.json",
    "jsons_teerb.json",
    "jsons_tender.json",
    "jsons_terminal_basic.json",
    "jsons_terminix_dark.json",
    "jsons_thayer_bright.json",
    "jsons_tin.json",
    "jsons_tokyo_night_light.json",
    "jsons_tokyo_night_storm.json",
    "jsons_tokyo_night.json",
    "jsons_tomorrow_night_blue.json",
    "jsons_tomorrow_night_bright.json",
    "jsons_tomorrow_night_eighties.json",
    "jsons_tomorrow_night.json",
    "jsons_tomorrow.json",
    "jsons_toy_chest.json",
    "jsons_treehouse.json",
    "jsons_twilight.json",
    "jsons_ura.json",
    "jsons_urple.json",
    "jsons_vag.json",
    "jsons_vaughn.json",
    "jsons_vibrant_ink.json",
    "jsons_vs_code_dark_.json",
    "jsons_vs_code_light_.json",
    "jsons_warm_neon.json",
    "jsons_wez.json",
    "jsons_wild_cherry.json",
    "jsons_wombat.json",
    "jsons_wryan.json",
    "jsons_wzoreck.json",
    "jsons_zenburn.json",
    "props_3024_day.json",
    "props_3024_night.json",
    "props_abernathy.json",
    "props_adventure.json",
    "props_adventuretime.json",
    "props_afterglow.json",
    "props_alabaster.json",
    "props_alienblood.json",
    "props_andromeda.json",
    "props_apple_classic.json",
    "props_arcoiris.json",
    "props_argonaut.json",
    "props_arthur.json",
    "props_ateliersulphurpool.json",
    "props_atom.json",
    "props_atomonelight.json",
    "props_aurora.json",
    "props_ayu_light.json",
    "props_ayu_mirage.json",
    "props_ayu.json",
    "props_banana_blueberry.json",
    "props_batman.json",
    "props_belafonte_day.json",
    "props_belafonte_night.json",
    "props_birdsofparadise.json",
    "props_blazer.json",
    "props_blue_matrix.json",
    "props_blueberrypie.json",
    "props_bluedolphin.json",
    "props_blulocodark.json",
    "props_blulocolight.json",
    "props_borland.json",
    "props_breeze.json",
    "props_bright_lights.json",
    "props_broadcast.json",
    "props_brogrammer.json",
    "props_builtin_dark.json",
    "props_builtin_light.json",
    "props_builtin_pastel_dark.json",
    "props_builtin_solarized_dark.json",
    "props_builtin_solarized_light.json",
    "props_builtin_tango_dark.json",
    "props_builtin_tango_light.json",
    "props_c64.json",
    "props_calamity.json",
    "props_catppuccin-frappe.json",
    "props_catppuccin-latte.json",
    "props_catppuccin-macchiato.json",
    "props_catppuccin-mocha.json",
    "props_cga.json",
    "props_chalk.json",
    "props_chalkboard.json",
    "props_challengerdeep.json",
    "props_chester.json",
    "props_ciapre.json",
    "props_clrs.json",
    "props_cobalt_neon.json",
    "props_cobalt2.json",
    "props_coffee_theme.json",
    "props_crayonponyfish.json",
    "props_cyberdyne.json",
    "props_cyberpunk.json",
    "props_dark_pastel.json",
    "props_dark+.json",
    "props_darkermatrix.json",
    "props_darkmatrix.json",
    "props_darkside.json",
    "props_deep.json",
    "props_desert.json",
    "props_dimmedmonokai.json",
    "props_django.json",
    "props_djangorebornagain.json",
    "props_djangosmooth.json",
    "props_doom_peacock.json",
    "props_doomone.json",
    "props_dotgov.json",
    "props_dracula.json",
    "props_dracula+.json",
    "props_duckbones.json",
    "props_duotone_dark.json",
    "props_earthsong.json",
    "props_elemental.json",
    "props_elementary.json",
    "props_encom.json",
    "props_espresso_libre.json",
    "props_espresso.json",
    "props_everblush.json",
    "props_fahrenheit.json",
    "props_fairyfloss.json",
    "props_fideloper.json",
    "props_firefoxdev.json",
    "props_firewatch.json",
    "props_fishtank.json",
    "props_flat.json",
    "props_flatland.json",
    "props_floraverse.json",
    "props_forestblue.json",
    "props_framer.json",
    "props_frontenddelight.json",
    "props_funforrest.json",
    "props_galaxy.json",
    "props_galizur.json",
    "props_github_dark.json",
    "props_github.json",
    "props_glacier.json",
    "props_grape.json",
    "props_grass.json",
    "props_grey-green.json",
    "props_gruvbox_light.json",
    "props_gruvboxdark.json",
    "props_gruvboxdarkhard.json",
    "props_guezwhoz.json",
    "props_hacktober.json",
    "props_hardcore.json",
    "props_harper.json",
    "props_hax0r_blue.json",
    "props_hax0r_gr33n.json",
    "props_hax0r_r3d.json",
    "props_highway.json",
    "props_hipster_green.json",
    "props_hivacruz.json",
    "props_homebrew.json",
    "props_hopscotch.256.json",
    "props_hopscotch.json",
    "props_hurtado.json",
    "props_hybrid.json",
    "props_ic_green_ppl.json",
    "props_ic_orange_ppl.json",
    "props_iceberg-dark.json",
    "props_iceberg-light.json",
    "props_idea.json",
    "props_idletoes.json",
    "props_ir_black.json",
    "props_jackie_brown.json",
    "props_japanesque.json",
    "props_jellybeans.json",
    "props_jetbrains_darcula.json",
    "props_jubi.json",
    "props_kanagawabones.json",
    "props_kibble.json",
    "props_kolorit.json",
    "props_konsolas.json",
    "props_lab_fox.json",
    "props_laser.json",
    "props_later_this_evening.json",
    "props_lavandula.json",
    "props_liquidcarbon.json",
    "props_liquidcarbontransparent.json",
    "props_liquidcarbontransparentinverse.json",
    "props_lovelace.json",
    "props_man_page.json",
    "props_mariana.json",
    "props_material.json",
    "props_materialdark.json",
    "props_materialdarker.json",
    "props_materialdesigncolors.json",
    "props_materialocean.json",
    "props_mathias.json",
    "props_matrix.json",
    "props_medallion.json",
    "props_midnight-in-mojave.json",
    "props_mirage.json",
    "props_misterioso.json",
    "props_molokai.json",
    "props_monalisa.json",
    "props_monokai_remastered.json",
    "props_monokai_soda.json",
    "props_monokai_vivid.json",
    "props_n0tch2k.json",
    "props_neobones_dark.json",
    "props_neobones_light.json",
    "props_neon.json",
    "props_neopolitan.json",
    "props_neutron.json",
    "props_night_owlish_light.json",
    "props_nightlion_v1.json",
    "props_nightlion_v2.json",
    "props_niji.json",
    "props_nocturnal_winter.json",
    "props_nord-light.json",
    "props_nord.json",
    "props_novel.json",
    "props_obsidian.json",
    "props_ocean.json",
    "props_oceanic-next.json",
    "props_oceanicmaterial.json",
    "props_ollie.json",
    "props_onehalfdark.json",
    "props_onehalflight.json",
    "props_operator_mono_dark.json",
    "props_overnight_slumber.json",
    "props_palenighthc.json",
    "props_pandora.json",
    "props_paraiso_dark.json",
    "props_paulmillr.json",
    "props_pencildark.json",
    "props_pencillight.json",
    "props_peppermint.json",
    "props_piatto_light.json",
    "props_pnevma.json",
    "props_popping_and_locking.json",
    "props_primary.json",
    "props_pro_light.json",
    "props_pro.json",
    "props_purple_rain.json",
    "props_purplepeter.json",
    "props_rapture.json",
    "props_raycast_dark.json",
    "props_raycast_light.json",
    "props_rebecca.json",
    "props_red_alert.json",
    "props_red_planet.json",
    "props_red_sands.json",
    "props_relaxed.json",
    "props_retro.json",
    "props_rippedcasts.json",
    "props_rose-pine-dawn.json",
    "props_rose-pine-moon.json",
    "props_rose-pine.json",
    "props_rouge_2.json",
    "props_royal.json",
    "props_ryuuko.json",
    "props_sakura.json",
    "props_scarlet_protocol.json",
    "props_seafoam_pastel.json",
    "props_seashells.json",
    "props_seoulbones_dark.json",
    "props_seoulbones_light.json",
    "props_seti.json",
    "props_shades-of-purple.json",
    "props_shaman.json",
    "props_slate.json",
    "props_sleepyhollow.json",
    "props_smyck.json",
    "props_snazzy.json",
    "props_softserver.json",
    "props_solarized_darcula.json",
    "props_solarized_dark_-_patched.json",
    "props_solarized_dark_higher_contrast.json",
    "props_spacedust.json",
    "props_spacegray_eighties_dull.json",
    "props_spacegray_eighties.json",
    "props_spacegray.json",
    "props_spiderman.json",
    "props_spring.json",
    "props_square.json",
    "props_sublette.json",
    "props_subliminal.json",
    "props_sundried.json",
    "props_symfonic.json",
    "props_synthwave-everything.json",
    "props_synthwave.json",
    "props_synthwavealpha.json",
    "props_tango_adapted.json",
    "props_tango_half_adapted.json",
    "props_teerb.json",
    "props_terminal_basic.json",
    "props_thayer_bright.json",
    "props_the_hulk.json",
    "props_tinacious_design_(dark).json",
    "props_tinacious_design_(light).json",
    "props_tokyonight-day.json",
    "props_tokyonight-storm.json",
    "props_tokyonight.json",
    "props_tomorrow_night_blue.json",
    "props_tomorrow_night_bright.json",
    "props_tomorrow_night_burns.json",
    "props_tomorrow_night_eighties.json",
    "props_tomorrow_night.json",
    "props_tomorrow.json",
    "props_toychest.json",
    "props_treehouse.json",
    "props_twilight.json",
    "props_ubuntu.json",
    "props_ultradark.json",
    "props_ultraviolent.json",
    "props_underthesea.json",
    "props_unikitty.json",
    "props_urple.json",
    "props_vaughn.json",
    "props_vibrantink.json",
    "props_vimbones.json",
    "props_violet_dark.json",
    "props_violet_light.json",
    "props_warmneon.json",
    "props_wez.json",
    "props_whimsy.json",
    "props_wildcherry.json",
    "props_wilmersdorf.json",
    "props_wombat.json",
    "props_wryan.json",
    "props_zenbones_dark.json",
    "props_zenbones_light.json",
    "props_zenbones.json",
    "props_zenburn.json",
    "props_zenburned.json",
    "props_zenwritten_dark.json",
    "props_zenwritten_light.json",
];